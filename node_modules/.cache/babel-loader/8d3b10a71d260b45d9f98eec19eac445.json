{"ast":null,"code":"var _jsxFileName = \"/media/adarsh/New Volume/project/face recognition app/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport 'tachyons';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'd6d6bef804924a78aebb0673387b38aa'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      console.log(data.outputs[0].data.regions[0].region_info.bounding_box); // const clarifaiFace =\n      //   data.outputs[0].data.regions[0].region_info.bounding_box;\n      // const image = document.getElementById('inputimage');\n      // const width = Number(image.width);\n      // const height = Number(image.height);\n      // return {\n      //   leftCol: clarifaiFace.left_col * width,\n      //   topRow: clarifaiFace.top_row * height,\n      //   rightCol: width - clarifaiFace.right_col * width,\n      //   bottomRow: height - clarifaiFace.bottom_row * height,\n      // };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/adarsh/New Volume/project/face recognition app/src/App.js"],"names":["React","Component","Navigation","ImageLinkForm","FaceRecognition","Logo","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","console","log","outputs","regions","region_info","bounding_box","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,UAAP;AACA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,UAAU,EAAE;AAFL;AAFH;AADC;AADY,CAAzB;;AAYA,MAAMR,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BkB,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,qBATc,GASWC,IAAD,IAAU;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBH,IAAhB,CAAqBI,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAxD,EADgC,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAtBa;;AAAA,SAwBdC,cAxBc,GAwBIC,GAAD,IAAS;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,WAAKC,QAAL,CAAc;AAAED,QAAAA,GAAG,EAAEA;AAAP,OAAd;AACD,KA3Ba;;AAAA,SA6BdE,aA7Bc,GA6BGC,KAAD,IAAW;AACzB,WAAKF,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAanB;AAAtB,OAAd;AACD,KA/Ba;;AAAA,SAiCdoB,cAjCc,GAiCG,MAAM;AACrB,WAAKL,QAAL,CAAc;AAAEM,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWJ;AAAvB,OAAd;AACAxB,MAAAA,GAAG,CAAC6B,MAAJ,CACGC,OADH,CACW/B,QAAQ,CAACgC,iBADpB,EACuC,KAAKH,KAAL,CAAWJ,KADlD,EAEGQ,IAFH,CAESC,QAAD,IACJ,KAAKd,cAAL,CAAoB,KAAKR,qBAAL,CAA2BsB,QAA3B,CAApB,CAHJ,EAKGC,KALH,CAKUC,GAAD,IAAStB,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CALlB;AAMD,KAzCa;;AAEZ,SAAKP,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXP,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAoCDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAiC,MAAA,MAAM,EAAEjC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,KAAKmB,aADtB;AAEE,MAAA,cAAc,EAAE,KAAKI,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eASE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AA1DyB;;AA6D5B,eAAe1B,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Navigation from './Components/Navigation/Navigation';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\n\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nimport 'tachyons';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'd6d6bef804924a78aebb0673387b38aa',\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    };\n  }\n\n  calculateFaceLocation = (data) => {\n    console.log(data.outputs[0].data.regions[0].region_info.bounding_box);\n    // const clarifaiFace =\n    //   data.outputs[0].data.regions[0].region_info.bounding_box;\n    // const image = document.getElementById('inputimage');\n    // const width = Number(image.width);\n    // const height = Number(image.height);\n    // return {\n    //   leftCol: clarifaiFace.left_col * width,\n    //   topRow: clarifaiFace.top_row * height,\n    //   rightCol: width - clarifaiFace.right_col * width,\n    //   bottomRow: height - clarifaiFace.bottom_row * height,\n    // };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) =>\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Particles className='particles' params={particlesOptions} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}